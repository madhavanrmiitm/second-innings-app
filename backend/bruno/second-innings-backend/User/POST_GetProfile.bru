meta {
  name: POST_GetProfile
  type: http
  seq: 1
}

post {
  url: {{baseUrl}}{{apiPrefix}}/user/profile
  body: json
  auth: none
}

body:json {
  {
    "id_token": "{{userToken}}"
  }
}

tests {
  test("Status code is 200 for successful profile retrieval", function() {
    expect(res.getStatus()).to.equal(200);
  });

  test("Response has success message", function() {
    expect(res.getBody().message).to.equal("User profile retrieved successfully.");
  });

  test("Response contains user profile data", function() {
    expect(res.getBody().data).to.have.property('user');
  });

  test("User profile has all required fields", function() {
    const user = res.getBody().data.user;
    expect(user).to.have.property('id');
    expect(user).to.have.property('gmail_id');
    expect(user).to.have.property('firebase_uid');
    expect(user).to.have.property('full_name');
    expect(user).to.have.property('role');
    expect(user).to.have.property('status');
    expect(user).to.have.property('created_at');
    expect(user).to.have.property('updated_at');
  });

  test("User has valid role", function() {
    const user = res.getBody().data.user;
    const validRoles = ['admin', 'caregiver', 'family_member', 'senior_citizen', 'interest_group_admin', 'support_user'];
    expect(validRoles).to.include(user.role);
  });

  test("User has valid status", function() {
    const user = res.getBody().data.user;
    const validStatuses = ['pending_approval', 'active', 'blocked'];
    expect(validStatuses).to.include(user.status);
  });
}
