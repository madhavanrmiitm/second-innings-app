meta {
  name: GET_CaregiverRequests_SeniorCitizen
  type: http
  seq: 12
}

get {
  url: {{baseUrl}}{{apiPrefix}}/me/caregiver-requests
  body: none
  auth: bearer
}

auth:bearer {
  token: {{seniorCitizenToken}}
}

tests {
  test("Status code is 200 for successful caregiver requests retrieval", function() {
    expect(res.getStatus()).to.equal(200);
  });

  test("Response has success message", function() {
    expect(res.getBody().message).to.contain("successfully");
  });

  test("Response contains caregiver requests data", function() {
    expect(res.getBody().data).to.have.property('sent_requests');
    expect(res.getBody().data).to.have.property('received_requests');
    expect(res.getBody().data.sent_requests).to.be.an('array');
    expect(res.getBody().data.received_requests).to.be.an('array');
  });

  test("Each sent request has required fields", function() {
    if (res.getBody().data.sent_requests.length > 0) {
      const request = res.getBody().data.sent_requests[0];
      expect(request).to.have.property('id');
      expect(request).to.have.property('caregiver_name');
      expect(request).to.have.property('status');
      expect(request).to.have.property('created_at');
    }
  });

  test("Each received request has required fields", function() {
    if (res.getBody().data.received_requests.length > 0) {
      const request = res.getBody().data.received_requests[0];
      expect(request).to.have.property('id');
      expect(request).to.have.property('caregiver_name');
      expect(request).to.have.property('status');
      expect(request).to.have.property('created_at');
    }
  });
}
