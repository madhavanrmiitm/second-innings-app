meta {
  name: GET_Users
  type: http
  seq: 1
}

get {
  url: {{baseUrl}}{{apiPrefix}}/admin/users
  body: none
  auth: bearer
}

auth:bearer {
  token: {{adminToken}}
}

tests {
  test("Status code is 200 for successful user retrieval", function() {
    expect(res.getStatus()).to.equal(200);
  });

  test("Response has success message", function() {
    expect(res.getBody().message).to.equal("System users retrieved successfully.");
  });

  test("Response contains users data", function() {
    expect(res.getBody().data).to.have.property('users');
    expect(res.getBody().data.users).to.be.an('array');
  });

  test("Each user has required fields", function() {
    if (res.getBody().data.users.length > 0) {
      const user = res.getBody().data.users[0];
      expect(user).to.have.property('id');
      expect(user).to.have.property('gmail_id');
      expect(user).to.have.property('full_name');
      expect(user).to.have.property('role');
      expect(user).to.have.property('status');
      expect(user).to.have.property('created_at');
    }
  });

  test("User roles are valid", function() {
    const validRoles = ['admin', 'caregiver', 'family_member', 'senior_citizen', 'interest_group_admin', 'support_user'];
    res.getBody().data.users.forEach(user => {
      expect(validRoles).to.include(user.role);
    });
  });

  test("User statuses are valid", function() {
    const validStatuses = ['pending_approval', 'active', 'blocked'];
    res.getBody().data.users.forEach(user => {
      expect(validStatuses).to.include(user.status);
    });
  });

  test("Test data includes users with different statuses", function() {
    const users = res.getBody().data.users;
    const statuses = users.map(user => user.status);
    expect(statuses).to.include('active');
    expect(statuses).to.include('pending_approval');
    expect(statuses).to.include('blocked');
  });

  test("Test data includes all user roles", function() {
    const users = res.getBody().data.users;
    const roles = users.map(user => user.role);
    expect(roles).to.include('admin');
    expect(roles).to.include('caregiver');
    expect(roles).to.include('family_member');
    expect(roles).to.include('senior_citizen');
    expect(roles).to.include('interest_group_admin');
    expect(roles).to.include('support_user');
  });

  test("Test data includes users with all required fields", function() {
    const users = res.getBody().data.users;
    const firstUser = users[0];
    expect(firstUser).to.have.property('id');
    expect(firstUser).to.have.property('gmail_id');
    expect(firstUser).to.have.property('full_name');
    expect(firstUser).to.have.property('role');
    expect(firstUser).to.have.property('status');
    expect(firstUser).to.have.property('created_at');
  });
}
